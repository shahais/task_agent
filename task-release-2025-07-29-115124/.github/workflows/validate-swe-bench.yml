name: SWE-bench Data Point Validator with Real Evaluation

on:
  pull_request:
    paths:
      - 'data_points/**/*.json'
  push:
    branches: [main]
    paths:
      - 'data_points/**/*.json'

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential
    
    - name: Install Python dependencies
      run: |
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ UV –¥–ª—è –±—ã—Å—Ç—Ä–æ—Ç—ã
        uv pip install --system swe-bench pytest docker
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        uv pip install --system numpy matplotlib scipy scikit-learn django
    
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          data_points/**/*.json
    
    - name: Quick Structure Validation
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üîç –ë—ã—Å—Ç—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
        echo "${{ steps.changed-files.outputs.all_changed_files }}"
        
        # –°–Ω–∞—á–∞–ª–∞ —Ç–æ–ª—å–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–±—ã—Å—Ç—Ä–æ)
        python validator.py --no-evaluation --verbose ${{ steps.changed-files.outputs.all_changed_files }}
        
        echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
    
    - name: Real SWE-bench Evaluation
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üöÄ –ó–∞–ø—É—Å–∫ –†–ï–ê–õ–¨–ù–û–ì–û SWE-bench evaluation:"
        echo "‚ö†Ô∏è  –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        FILES="${{ steps.changed-files.outputs.all_changed_files }}"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º SWE-bench evaluation
        echo "–§–∞–π–ª—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏: $FILES"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ç–æ—Ä —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏
        python validator.py --verbose --timeout 600 $FILES
        
        VALIDATION_EXIT_CODE=$?
        
        if [ $VALIDATION_EXIT_CODE -eq 0 ]; then
          echo "‚úÖ –í–°–ï data points –ø—Ä–æ—à–ª–∏ SWE-bench evaluation!"
        else
          echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ data points –ù–ï –ü–†–û–®–õ–ò SWE-bench evaluation"
          exit 1
        fi
    
    - name: Generate Validation Report
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:"
        
        FILES="${{ steps.changed-files.outputs.all_changed_files }}"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JSON –æ—Ç—á–µ—Ç
        python validator.py --json --verbose $FILES > validation_report.json
        
        echo "üìã –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç:"
        python -c "
        import json
        with open('validation_report.json') as f:
            results = json.load(f)
        
        print(f'–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(results)}')
        
        valid_count = sum(1 for r in results if r['valid'])
        print(f'–í–∞–ª–∏–¥–Ω—ã—Ö: {valid_count}/{len(results)}')
        
        for result in results:
            file_name = result['file']
            status = '‚úÖ VALID' if result['valid'] else '‚ùå INVALID'
            print(f'{status}: {file_name}')
            
            if result.get('swe_bench_evaluation'):
                swe = result['swe_bench_evaluation']
                if swe.get('patch_applied'):
                    print(f'  üîß –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω–µ–Ω: ‚úÖ')
                else:
                    print(f'  üîß –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω–µ–Ω: ‚ùå')
                
                if swe.get('tests_passed'):
                    print(f'  üß™ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã: ‚úÖ')
                else:
                    print(f'  üß™ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã: ‚ùå')
                
                fail_to_pass = swe.get('fail_to_pass_results', {})
                if fail_to_pass:
                    passed = sum(1 for r in fail_to_pass.values() if r['passed'])
                    total = len(fail_to_pass)
                    emoji = '‚úÖ' if passed == total else '‚ùå'
                    print(f'  üìà FAIL_TO_PASS: {passed}/{total} {emoji}')
                
                pass_to_pass = swe.get('pass_to_pass_results', {})
                if pass_to_pass:
                    passed = sum(1 for r in pass_to_pass.values() if r['passed'])
                    total = len(pass_to_pass)
                    emoji = '‚úÖ' if passed == total else '‚ùå'
                    print(f'  üìä PASS_TO_PASS: {passed}/{total} {emoji} (sample)')
            
            print()
        "
    
    - name: Upload validation report
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: swe-bench-validation-report
        path: validation_report.json
    
    - name: Repository Statistics (on main)
      if: github.ref == 'refs/heads/main' && steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è SWE-bench data points:"
        
        # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º
        echo "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º:"
        find data_points -name "*.json" -type f | xargs grep -h '"repo"' | \
          cut -d'"' -f4 | sort | uniq -c | sort -nr | head -10
        
        echo ""
        echo "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
        echo "–í—Å–µ–≥–æ data points: $(find data_points -name '*.json' | wc -l)"
        
        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤—ã—Ö 5 —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        SAMPLE_FILES=$(find data_points -name "*.json" | head -5)
        if [ ! -z "$SAMPLE_FILES" ]; then
          echo ""
          echo "–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (sample 5 —Ñ–∞–π–ª–æ–≤):"
          python validator.py --no-evaluation $SAMPLE_FILES
        fi
    
    - name: Performance Metrics
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "‚è±Ô∏è –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:"
        
        # –í—Ä–µ–º—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        if [ -f validation_report.json ]; then
          python -c "
          import json, datetime
          with open('validation_report.json') as f:
              results = json.load(f)
          
          total_files = len(results)
          total_evaluation_time = 0
          
          for result in results:
              swe = result.get('swe_bench_evaluation', {})
              if swe and swe.get('evaluation_success') is not None:
                  total_evaluation_time += 1  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ —Ñ–∞–π–ª
          
          print(f'–§–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_files}')
          print(f'–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è SWE-bench evaluation: ~{total_evaluation_time * 30} —Å–µ–∫—É–Ω–¥')
          print(f'–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Ñ–∞–π–ª: ~30 —Å–µ–∫—É–Ω–¥')
          "
        fi
    
    - name: No changes detected
      if: steps.changed-files.outputs.any_changed == 'false'
      run: |
        echo "‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ data_points –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        echo "–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞"
        echo ""
        echo "üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞:"
        echo "1. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π .json —Ñ–∞–π–ª –≤ data_points/"
        echo "2. –ò–∑–º–µ–Ω–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π data point"
        echo "3. –°–æ–∑–¥–∞–π—Ç–µ Pull Request"
        